{"version":3,"sources":["App.js","index.js"],"names":["App","useState","result","setResult","className","style","fontWeight","fontSize","color","font","onSubmit","event","diff","percent","msg","preventDefault","body","document","querySelector","initialPrice","value","quantity","currentPrice","Number","toFixed","backgroundColor","checkHandler","type","id","placeholder","required","autoFocus","min","border","padding","maxWidth","margin","href","target","rel","rootElement","getElementById","ReactDOM","render"],"mappings":"sJAGe,SAASA,IACtB,IAAI,EAAsBC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KAqDA,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,oBACEC,MAAO,CACLC,WAAY,OACZC,SAAU,OACVC,MAAO,QACPC,KAAM,QALV,sCAYF,iCACE,sBAAKL,UAAU,UAAf,UACE,mBAAGC,MAAO,CAAEG,MAAO,SAAnB,2DAGA,mBAAGH,MAAO,CAAEG,MAAO,SAAnB,mCAEA,uBAAME,SAAU,SAACC,GAAD,OAzExB,SAAsBA,GAGpB,IAAIC,EAAMC,EAASC,EAFnBH,EAAMI,iBAIN,IAAIC,EAAOC,SAASC,cAAc,QAC9BC,EAAeF,SAASC,cAAc,kBAAkBE,MACxDC,EAAWJ,SAASC,cAAc,aAAaE,MAC/CE,EAAeL,SAASC,cAAc,kBAAkBE,MAG5DD,EAAeI,OAAOJ,GACtBE,EAAWE,OAAOF,GAGdF,GAFJG,EAAeC,OAAOD,KAOpBR,EAAG,yBAFHD,GADAD,EAAOO,EAAeG,GACJH,EAAgB,KAEHK,QAAQ,GAApC,4BACDZ,EAAOS,GACPG,QAAQ,GAFP,MAKDR,EAAKX,MAAMoB,gBADTZ,EAAU,GACiB,UAEA,WAEtBS,EAAeH,GAKxBL,EAAG,4BAFHD,GADAD,EAAOU,EAAeH,GACJA,EAAgB,KAEAK,QAAQ,GAAvC,8BACDZ,EAAOS,GACPG,QAAQ,GAFP,MAKDR,EAAKX,MAAMoB,gBADTZ,EAAU,GACiB,UAEA,YAI/BC,EAAM,oBACNE,EAAKX,MAAMoB,gBAAkB,sBAE/BtB,EAAUW,GAyBuBY,CAAaf,IAAxC,UACE,uBACEgB,KAAK,SACLC,GAAG,gBACHC,YAAY,uBACZC,UAAQ,EACRC,WAAS,EACTC,IAAI,MAEN,uBACEL,KAAK,SACLC,GAAG,WACHC,YAAY,qBACZC,UAAQ,EACRE,IAAI,MAEN,uBACEL,KAAK,SACLC,GAAG,gBACHC,YAAY,uBACZC,UAAQ,EACRE,IAAI,MAGN,wBACEL,KAAK,SACLvB,UAAU,YACVC,MAAO,CAAEC,WAAY,QAHvB,uBASF,qBACEsB,GAAG,SACHvB,MAAO,CACL4B,OAAQ,kBACRC,QAAS,OACT5B,WAAY,OACZmB,gBAAiB,QACjBU,SAAU,MACVC,OAAQ,QARZ,SAWGlC,OAIL,qBAAKE,UAAU,iBAGjB,iCACE,mBACEiC,KAAK,8BACLC,OAAO,SACPC,IAAI,sBAHN,qCC9HR,IAAMC,EAAcvB,SAASwB,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC3C,EAAD,MAEFwC,I","file":"static/js/main.9e784245.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  var [result, setResult] = useState(\"\");\n\n  function checkHandler(event) {\n    event.preventDefault();\n\n    let diff, percent, msg;\n\n    let body = document.querySelector(\"body\");\n    let initialPrice = document.querySelector(\"#initial-price\").value;\n    let quantity = document.querySelector(\"#quantity\").value;\n    let currentPrice = document.querySelector(\"#current-price\").value;\n\n    // convert to number *IMP*\n    initialPrice = Number(initialPrice);\n    quantity = Number(quantity);\n    currentPrice = Number(currentPrice);\n\n    if (initialPrice > currentPrice) {\n      // loss\n      diff = initialPrice - currentPrice;\n      percent = (diff / initialPrice) * 100;\n\n      msg = `Total Loss of ${percent.toFixed(1)}% loss worth Rs.${(\n        diff * quantity\n      ).toFixed(1)} !`;\n\n      if (percent > 50) {\n        body.style.backgroundColor = \"#ff0000\";\n      } else {\n        body.style.backgroundColor = \"#D9AD26\";\n      }\n    } else if (currentPrice > initialPrice) {\n      // profit\n      diff = currentPrice - initialPrice;\n      percent = (diff / initialPrice) * 100;\n\n      msg = `Total Returns of ${percent.toFixed(1)}% profit worth Rs.${(\n        diff * quantity\n      ).toFixed(1)} !`;\n\n      if (percent > 50) {\n        body.style.backgroundColor = \"#4abb5f\";\n      } else {\n        body.style.backgroundColor = \"#D9AD26\";\n      }\n    } else {\n      // no profit or loss\n      msg = \"You're stagnant! \";\n      body.style.backgroundColor = \"rgb(170, 183, 255)\";\n    }\n    setResult(msg);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1\n          style={{\n            fontWeight: \"bold\",\n            fontSize: \"50px\",\n            color: \"white\",\n            font: \"bold\"\n          }}\n        >\n          Profit/Loss Calculator\n        </h1>\n      </header>\n\n      <main>\n        <div className=\"wrapper\">\n          <p style={{ color: \"white\" }}>\n            Find out if your stock gained profit or loss?\n          </p>\n          <p style={{ color: \"wheat\" }}>Input your Investment</p>\n\n          <form onSubmit={(event) => checkHandler(event)}>\n            <input\n              type=\"number\"\n              id=\"initial-price\"\n              placeholder=\"Initial Stock Price*\"\n              required\n              autoFocus\n              min=\"1\"\n            ></input>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              placeholder=\"Quantity of Stock*\"\n              required\n              min=\"1\"\n            ></input>\n            <input\n              type=\"number\"\n              id=\"current-price\"\n              placeholder=\"Current Stock Price*\"\n              required\n              min=\"1\"\n            ></input>\n\n            <button\n              type=\"submit\"\n              className=\"check-btn\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              Submit\n            </button>\n          </form>\n\n          <div\n            id=\"result\"\n            style={{\n              border: \"1px solid white\",\n              padding: \"1rem\",\n              fontWeight: \"bold\",\n              backgroundColor: \"white\",\n              maxWidth: \"50%\",\n              margin: \"auto\"\n            }}\n          >\n            {result}\n          </div>\n        </div>\n\n        <div className=\"stock_img\"></div>\n      </main>\n\n      <footer>\n        <a\n          href=\"https://dhruvak.netlify.app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Dhruva | Portfolio\n        </a>\n      </footer>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}